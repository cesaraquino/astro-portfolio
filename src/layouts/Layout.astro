---
import "@/styles/global.css";

import Header from "@/components/Header.astro";
import Hero from "@/components/Hero.astro";
import About from "@/components/About.astro";
import Skills from "@/components/Skills.astro";
import Experience from "@/components/Experience.astro";
import Work from "@/components/Work.astro";
import Testimonials from "@/components/Testimonials.astro";
import Contact from "@/components/Contact.astro";
import Footer from "@/components/Footer.astro";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/images/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>Portfolio</title>
  </head>
  <body class="text-gray-900 dark:bg-gray-950 dark:text-gray-100">
    <Header />
    <Hero />
    <About />
    <Skills />
    <Experience />
    <Work />
    <Testimonials />
    <Contact />
    <Footer />
    <slot />
    <script is:inline>
      const showMenu = document.getElementById("show-menu");
      const menu = document.getElementById("menu");
      const closeMenu = document.getElementById("close-menu");

      // Función para seleccionar el tema
      (function () {
        // Cargar tema guardado o preferencia del sistema
        const savedTheme = localStorage.getItem("theme");
        const htmlEl = document.documentElement;

        if (savedTheme === "dark") htmlEl.classList.add("dark");
        else if (savedTheme === "light") htmlEl.classList.remove("dark");
        else if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          htmlEl.classList.add("dark");
        }

        // Manejar clic en el botón
        document.addEventListener("DOMContentLoaded", () => {
          document
            .getElementById("theme-toggle")
            .addEventListener("click", (e) => {
              e.preventDefault();
              const isDark = htmlEl.classList.toggle("dark");
              localStorage.setItem("theme", isDark ? "dark" : "light");
            });
        });
      })();

      // Función para la navegación
      const navLink = document.querySelectorAll(".nav-link");

      navLink.forEach((link) => {
        link.addEventListener("click", (e) => {
          e.preventDefault();
          document
            .querySelector(".nav-link.active")
            ?.classList.remove("active");
          link.classList.add("active");

          const target = link.getAttribute("href");
          document.querySelector(target)?.scrollIntoView({
            behavior: "smooth",
            block: "start",
          });

          menu.classList.toggle("translate-x-full");
        });
      });

      // Función para abrir y cerrar el menu

      showMenu.addEventListener("click", () => {
        menu.classList.toggle("translate-x-full");
      });

      // Función para cerrar el menu

      closeMenu.addEventListener("click", () => {
        menu.classList.toggle("translate-x-full");
      });
    </script>
  </body>
</html>
